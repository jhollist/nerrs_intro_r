penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements")
penguin_gg
penguins
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 8) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(method = "loess")
penguin_gg
?lm
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(color = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(species), method = "lm")
penguin_gg
?aes
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(color = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm,
color = species)) +
geom_point(size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm,
color = species)) +
geom_point(aes(shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm,
color = species)) +
geom_point(aes(shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal()
penguin_gg
install.packages("ggthemes")
library(ggthemes)
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_base()
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_tufte()
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal()
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal()
penguin_gg
ggsave("penguin_plot.tif", penguin_gg, dpi = 600)
ggsave("penguin_plot.jpg", penguin_gg, dpi = 600)
ggsave("penguin_plot.jpg", penguin_gg, dpi = 600, units = "in", width = 8.5,
height = 11)
# NE NERRS Analysis
################################################################################
# Purpose: The purpose of this document is to serve as motivating example (R
# and Open data are cool!), but will also serve to structure the rest of this
# workshop in that we will see how to work with and visualize data in R, combine
# code and documentation with R Markdown, and introduce The Tidyverse
# (https://tidyverse.org) which is an opinionated (but effective) way to think
# about organizing and analyzing data in R.  To accomplish this, we will be
# using data from Wells, Great Bay, Waquoit Bay, and Narragansett Bay National
# Estuarine Research Reserves.  These data provide a nice water quality relevant
# example and you all should be familiar with it to help sort out any issues we
# might run into.
################################################################################
# Install packages, if needed: This is fancier than it normally needs to be.  It
# checks to make sure that packages are installed and installs if they aren't
# then loads it up.
pkgs <- c("ggplot2", "dplyr", "readr", "plotly", "SWMPr")
for(i in pkgs){
if(!i %in% installed.packages()){
install.packages(i)
}
install.packages("lubridate")
################################################################################
# Load up packages in R session
library(ggplot2)
library(dplyr)
library(readr)
library(plotly)
library(lubridate)
library(stringr)
library(tidyr)
library(lubridate)
################################################################################
# Get Data: The data we need is available from the National Aquatic Resource
# Survey's website First we can get the dataset that we have saved as a `.csv`
# in this repository.
ne_nerrs_wq <- read_csv("ne_nerrs_wq_2020.csv", guess_max = 600000)
ne_nerrs_sites <- read_csv("https://raw.githubusercontent.com/jhollist/nerrs_r/master/data/ne_nerrs_sites.csv")
#dim(ne_nerrs_sites) this gives the dimensions
#nrow(ne_nerrs_sites)
################################################################################
# Manipulate Data: Let's tidy up this dataset by dropping all observations with
# a non-zero flag, selecting out our desired columns, and summarizing the data
# for each reserve.
ne_nerrs_wq <- ne_nerrs_wq %>%
select(site, datetimestamp:f_do_pct, ph:f_turb) %>%
mutate(f_temp = case_when(.data$f_temp != 0 ~
NA_real_,
TRUE ~ .data$f_temp),
f_spcond = case_when(.data$f_spcond != 0 ~
NA_real_,
TRUE ~ .data$f_spcond),
f_sal = case_when(.data$f_sal != 0 ~
NA_real_,
TRUE ~ .data$f_sal),
f_do_pct = case_when(.data$f_do_pct != 0 ~
NA_real_,
TRUE ~ .data$f_do_pct),
f_ph = case_when(.data$f_ph != 0 ~
NA_real_,
TRUE ~ .data$f_ph),
f_turb = case_when(.data$f_turb != 0 ~
NA_real_,
TRUE ~ .data$f_turb)) %>%
filter(complete.cases(.)) %>%
select(site, datetimestamp, temp, sal, do_pct, ph, turb) %>%
mutate(reserve = str_sub(site, 1, 3),
datetime = ymd_hms(datetimestamp),
year = year(datetime),
month = month(datetime),
day = day(datetime),
date = ymd(paste(year, month, day, "-"))) %>%
select(reserve, site, date, temp, sal, do_pct, ph, turb) %>%
gather("param", "measurement", temp:turb) %>%
group_by(reserve, date, param) %>%
summarize(measurement = mean(measurement, na.rm = TRUE))
ne_nerrs_wq
ne_nerrs_wq_sites <- ne_nerrs_sites %>%
select(reserve = nerr_site_id, latitude, longitude, reserve_name) %>%
filter(reserve == "grb" | reserve == "nar" | reserve ==  "wel" |
reserve ==  "wqb") %>%
group_by(reserve) %>%
summarize(lat_mean = mean(latitude, na.rm = TRUE),
long_mean = mean(longitude, na.rm = TRUE)) %>%
left_join(ne_nerrs_wq, by = "reserve") %>%
pivot_wider(names_from = param, values_from = measurement)
ne_nerrs_wq_sites
################################################################################
# Visualize Data: Next step is to visualize the data.  Let's look at the
# association between total nitrogen, total phosphorus, and chlorophyll *a*.
ne_nerrs_wq_gg <- ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve)) +
facet_grid(param ~ reserve, scales = "free_y",
labeller = labeller(param = c(do_pct = "%DO", ph = "pH",
sal = "Salinity",
temp = "Temperature",
turb = "Turbidity"),
reserve = c(grb = "Great Bay",
nar = "Narr. Bay",
wel = "Wells",
wqb = "Waquoit Bay"))) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Date", y = "",
title = "Comparison of basic water quality across northeastern NERRS") +
scale_color_manual(values = c("darkred","darkblue","grey50","black"))
ggplotly(ne_nerrs_wq_gg)
ne_nerrs_wq_latlong %>%
group_by(reserve, lat_mean, long_mean, param) %>%
# Need ggplot2
library(ggplot2)
library(palmerpenguins)
library(ggthemes)
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(values = c("yellow", "green", "black"))
penguin_gg
install.packages("wesanderson")
library(wesanderson)
help(package="wesanderson")
wes_palette("Royal1", 4)
x <- wes_palette("Royal1", 4)
x
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(values = c("#ef8a62", "#f7f7f7", "#67a9cf"))
penguin_gg
# NE NERRS Analysis
################################################################################
# Purpose: The purpose of this document is to serve as motivating example (R
# and Open data are cool!), but will also serve to structure the rest of this
# workshop in that we will see how to work with and visualize data in R, combine
# code and documentation with R Markdown, and introduce The Tidyverse
# (https://tidyverse.org) which is an opinionated (but effective) way to think
# about organizing and analyzing data in R.  To accomplish this, we will be
# using data from Wells, Great Bay, Waquoit Bay, and Narragansett Bay National
# Estuarine Research Reserves.  These data provide a nice water quality relevant
# example and you all should be familiar with it to help sort out any issues we
# might run into.
################################################################################
# Install packages, if needed: This is fancier than it normally needs to be.  It
# checks to make sure that packages are installed and installs if they aren't
# then loads it up.
pkgs <- c("ggplot2", "dplyr", "readr", "plotly", "SWMPr")
for(i in pkgs){
if(!i %in% installed.packages()){
install.packages(i)
}
install.packages("lubridate")
################################################################################
# Load up packages in R session
library(ggplot2)
library(dplyr)
library(readr)
library(plotly)
library(lubridate)
library(stringr)
library(tidyr)
library(lubridate)
################################################################################
# Get Data: The data we need is available from the National Aquatic Resource
# Survey's website First we can get the dataset that we have saved as a `.csv`
# in this repository.
ne_nerrs_wq <- read_csv("ne_nerrs_wq_2020.csv", guess_max = 600000)
ne_nerrs_sites <- read_csv("https://raw.githubusercontent.com/jhollist/nerrs_r/master/data/ne_nerrs_sites.csv")
#dim(ne_nerrs_sites) this gives the dimensions
#nrow(ne_nerrs_sites)
################################################################################
# Manipulate Data: Let's tidy up this dataset by dropping all observations with
# a non-zero flag, selecting out our desired columns, and summarizing the data
# for each reserve.
ne_nerrs_wq <- ne_nerrs_wq %>%
select(site, datetimestamp:f_do_pct, ph:f_turb) %>%
mutate(f_temp = case_when(.data$f_temp != 0 ~
NA_real_,
TRUE ~ .data$f_temp),
f_spcond = case_when(.data$f_spcond != 0 ~
NA_real_,
TRUE ~ .data$f_spcond),
f_sal = case_when(.data$f_sal != 0 ~
NA_real_,
TRUE ~ .data$f_sal),
f_do_pct = case_when(.data$f_do_pct != 0 ~
NA_real_,
TRUE ~ .data$f_do_pct),
f_ph = case_when(.data$f_ph != 0 ~
NA_real_,
TRUE ~ .data$f_ph),
f_turb = case_when(.data$f_turb != 0 ~
NA_real_,
TRUE ~ .data$f_turb)) %>%
filter(complete.cases(.)) %>%
select(site, datetimestamp, temp, sal, do_pct, ph, turb) %>%
mutate(reserve = str_sub(site, 1, 3),
datetime = ymd_hms(datetimestamp),
year = year(datetime),
month = month(datetime),
day = day(datetime),
date = ymd(paste(year, month, day, "-"))) %>%
select(reserve, site, date, temp, sal, do_pct, ph, turb) %>%
gather("param", "measurement", temp:turb) %>%
group_by(reserve, date, param) %>%
summarize(measurement = mean(measurement, na.rm = TRUE))
ne_nerrs_wq
ne_nerrs_wq_sites <- ne_nerrs_sites %>%
select(reserve = nerr_site_id, latitude, longitude, reserve_name) %>%
filter(reserve == "grb" | reserve == "nar" | reserve ==  "wel" |
reserve ==  "wqb") %>%
group_by(reserve) %>%
summarize(lat_mean = mean(latitude, na.rm = TRUE),
long_mean = mean(longitude, na.rm = TRUE)) %>%
left_join(ne_nerrs_wq, by = "reserve") %>%
pivot_wider(names_from = param, values_from = measurement)
ne_nerrs_wq_sites
################################################################################
# Visualize Data: Next step is to visualize the data.  Let's look at the
# association between total nitrogen, total phosphorus, and chlorophyll *a*.
ne_nerrs_wq_gg <- ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve)) +
facet_grid(param ~ reserve, scales = "free_y",
labeller = labeller(param = c(do_pct = "%DO", ph = "pH",
sal = "Salinity",
temp = "Temperature",
turb = "Turbidity"),
reserve = c(grb = "Great Bay",
nar = "Narr. Bay",
wel = "Wells",
wqb = "Waquoit Bay"))) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Date", y = "",
title = "Comparison of basic water quality across northeastern NERRS") +
scale_color_manual(values = c("darkred","darkblue","grey50","black"))
ggplotly(ne_nerrs_wq_gg)
ne_nerrs_wq_latlong %>%
group_by(reserve, lat_mean, long_mean, param) %>%
ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve)) +
facet_grid(param ~ ., scales = "free_y",
labeller = labeller(param = c(do_pct = "%DO", ph = "pH",
sal = "Salinity",
temp = "Temperature",
turb = "Turbidity"),
reserve = c(grb = "Great Bay",
nar = "Narr. Bay",
wel = "Wells",
wqb = "Waquoit Bay"))) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Date", y = "",
title = "Comparison of basic water quality across northeastern NERRS") +
scale_color_manual(values = c("darkred","darkblue","grey50","black"))
ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve)) +
facet_grid(param ~ ., scales = "free_y",
labeller = labeller(param = c(do_pct = "%DO", ph = "pH",
sal = "Salinity",
temp = "Temperature",
turb = "Turbidity"),
reserve = c(grb = "Great Bay",
nar = "Narr. Bay",
wel = "Wells",
wqb = "Waquoit Bay"))) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Date", y = "",
title = "Comparison of basic water quality across northeastern NERRS") +
scale_color_manual(values = c("darkred","darkblue","grey50","black"))
ne_nerrs_wq
ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve))
ne_nerrs_wq %>%
ggplot(aes(x=date,y=measurement)) +
geom_point(aes(color=reserve)) +
facet_grid(param ~ reserve, scales = "free_y",
labeller = labeller(param = c(do_pct = "%DO", ph = "pH",
sal = "Salinity",
temp = "Temperature",
turb = "Turbidity"),
reserve = c(grb = "Great Bay",
nar = "Narr. Bay",
wel = "Wells",
wqb = "Waquoit Bay")))
ggplotly(ne_nerrs_wq_gg)
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(name = "Penguin Species",
values = c("darkred", "darkblue", "grey50")) +
scale_size_manual(name = "Penguin Species")
# Need ggplot2
library(ggplot2)
library(palmerpenguins)
library(ggthemes)
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(name = "Penguin Species",
values = c("darkred", "darkblue", "grey50")) +
scale_size_manual(name = "Penguin Species")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(name = "Penguin Species",
values = c("darkred", "darkblue", "grey50")) +
scale_shape_manual(name = "Penguin Species")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_manual(name = "Penguin Species") +
scale_shape_manual(name = "Penguin Species")
penguin_gg
penguin_gg <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species), size = 2) +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
title = "Association Between Penguin Bill Measurements") +
geom_smooth(aes(group = species), method = "lm") +
theme_minimal() +
scale_color_discrete(name = "Penguin Species") +
scale_shape_discrete(name = "Penguin Species")
penguin_gg
system("git add -A")
system('git commit -m "auto commit"')
system("git push origin main")
xdf <- data.frame(rnorm(100))
xdf
xdf <- rbind(xdf, xdf)
dim(xdf)
xdf <- cbind(xdf, xdf)
dim(xdf)
xdf <- cbind(xdf, xdf)
dim(xdf)
miscPackage::byter(xdf, "Mb")
xdf <- rbind(xdf, xdf)
miscPackage::byter(xdf, "Mb")
miscPackage::byter(xdf, "Gb")
dim(xdf)
x <- readr::read_csv("https://github.com/USEPA/cyano_space_time/blob/master/data/cst_data_2017.csv?raw=true")
x <- readr::read_csv("https://github.com/USEPA/cyano_space_time/raw/master/data/cst_data_2017.csv")
x <- readr::read_csv("../cyano_space_time/data/cst_data_2017.csv")
dim(x)
miscPackage::byter(x)
miscPackage::byter(x, "Gb")
miscPackage::byter(x, "Mb")
